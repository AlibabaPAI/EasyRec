name: CI Build
on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  ci-test:
    runs-on: EasyRec-unit-test
    defaults:
      run:
        shell: bash
    steps:
      - name: FetchCommit ${{ github.event.pull_request.head.sha }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive
      - name: RunCiTest
        id: run_ci_test
        env:
          TEST_DEVICES: ""
          PULL_REQUEST_CHANGES: ${{ github.event.pull_request.changes}}
        run: |
           source activate /home/admin/tf12_py2/
           if [ ! -e "/tmp/easyrec_data_20220113.tar.gz" ]
           then
             wget https://easyrec.oss-cn-beijing.aliyuncs.com/data/easyrec_data_20220113.tar.gz -O /tmp/easyrec_data_20220113.tar.gz
           fi
           tar -zvxf /tmp/easyrec_data_20220113.tar.gz
           source scripts/ci_test.sh
      - name: LabelAndComment
        env:
          CI_TEST_PASSED: ${{steps.run_ci_test.outputs.ci_test_passed}}
        uses: actions/github-script@v5
        with:
           script: |
             const { CI_TEST_PASSED } = process.env
             labels = await github.rest.issues.listLabelsOnIssue({
               issue_number: context.issue.number,
               repo:context.repo.repo,
               owner:context.repo.owner
             })
             console.log('labels.url=' + labels.url)

             labels = labels.data

             var label_names = []
             if (labels != null) {
               labels.forEach(tmp_lbl => label_names.push(tmp_lbl.name))
             }
             console.log(`ci_test_passed=${CI_TEST_PASSED} labels=${label_names}`);

             var pass_label = null;
             if (labels != null) {
                pass_label = labels.find(label=>label.name=='ci_test_passed');
             }

             var fail_label = null;
             if (labels != null) {
                fail_label = labels.find(label=>label.name=='ci_test_failed');
             }

             if (pass_label) {
               github.rest.issues.removeLabel({
                 issue_number: context.issue.number,
                 owner: context.repo.owner,
                 repo: context.repo.repo,
                 name: 'ci_test_passed'
               })
             }

             if (fail_label) {
               github.rest.issues.removeLabel({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: 'ci_test_failed'
               })
             }

             if (CI_TEST_PASSED == 1) {
               github.rest.issues.addLabels({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  labels: ['ci_test_passed']
               })

               github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: "CI Test Passed"
               })
             } else {
               github.rest.issues.addLabels({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  labels: ['ci_test_failed']
               })

               github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: "CI Test Failed"
               })
             }
      - name: SignalFail
        env:
          CI_TEST_PASSED: ${{steps.run_ci_test.outputs.ci_test_passed}}
        run: |
          echo "CI_TEST_PASSED=${CI_TEST_PASSED}"
          if [ $CI_TEST_PASSED -ne 1 ]
          then
            echo "ci_test_failed, will exit"
            exit 1
          fi
