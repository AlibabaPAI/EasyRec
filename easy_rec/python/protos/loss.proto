syntax = "proto2";
package protos;

enum LossType {
    CLASSIFICATION = 0;
    L2_LOSS = 1;
    SIGMOID_L2_LOSS = 2;
    // crossentropy loss/log loss
    CROSS_ENTROPY_LOSS = 3;
    SOFTMAX_CROSS_ENTROPY = 4;
    CIRCLE_LOSS = 5;
    MULTI_SIMILARITY_LOSS = 6;
    SOFTMAX_CROSS_ENTROPY_WITH_NEGATIVE_MINING = 7;
    PAIR_WISE_LOSS = 8;
    F1_REWEIGHTED_LOSS = 9;
    L2_QUANTILE_LOSS = 10;
}

message Loss {
  required LossType loss_type = 1;
  required float weight = 2 [default = 1.0];
  oneof loss_param {
    F1ReweighedLoss f1_reweighted_loss = 101;
    SoftmaxCrossEntropyWithNegativeMining softmax_loss = 102;
    CircleLoss circle_loss = 103;
    MultiSimilarityLoss multi_simi_loss = 104;
    L2QuantileLoss l2_quantile_loss = 105;
  }
};

message SoftmaxCrossEntropyWithNegativeMining {
  required uint32 num_negative_samples = 1;
  required float margin = 2 [default = 0];
  required float gamma = 3 [default = 1];
  required float coefficient_of_support_vector = 4 [default = 1];
}

message CircleLoss {
  required float margin = 1 [default = 0.25];
  required float gamma = 2 [default = 32];
}

message MultiSimilarityLoss {
  required float alpha = 1 [default = 2];
  required float beta = 2 [default = 50];
  required float lamb = 3 [default = 1];
  required float eps = 4 [default = 0.1];
}

message F1ReweighedLoss {
  required float f1_beta_square = 1 [default = 1.0];
  required float label_smoothing = 2 [default = 0];
}

message L2QuantileLoss {
  repeated float boundaries = 1;
  required float min = 2;
  required float max = 3;
}